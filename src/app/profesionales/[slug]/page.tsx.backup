"use client";

import { Breadcrumbs } from "@/components/breadcrumbs";
import {
  Button,
  Card,
  CardContent,
  CardHeader,
  CardTitle,
} from "@profesional/ui";
import {
  Calendar,
  MapPin,
  MessageCircle,
  Star,
  Video,
  ArrowLeft,
} from "lucide-react";
import { useProfileBySlug } from "@/lib/hooks/use-profiles";
import { useRouter } from "next/navigation";

interface ProfessionalPageProps {
  params: {
    slug: string;
  };
}

export default function ProfessionalPage({ params }: ProfessionalPageProps) {
  const router = useRouter();
  const {
    data: professional,
    isLoading,
    error,
  } = useProfileBySlug(params.slug);

  if (isLoading) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="text-center py-8">
          <div className="inline-block animate-spin rounded-full h-8 w-8 border-b-2 border-primary"></div>
          <p className="mt-2 text-muted-foreground">Cargando perfil...</p>
        </div>
      </div>
    );
  }

  if (error || !professional) {
    return (
      <div className="container mx-auto px-4 py-8">
        <div className="text-center py-8">
          <h1 className="text-2xl font-bold mb-4">Perfil no encontrado</h1>
          <p className="text-muted-foreground mb-4">
            El profesional que buscas no existe o no está disponible.
          </p>
          <Button onClick={() => router.push("/explorar")}>
            <ArrowLeft className="w-4 h-4 mr-2" />
            Volver a explorar
          </Button>
        </div>
      </div>
    );
  }

  const breadcrumbItems = [
    { label: "Explorar", href: "/explorar" },
    { label: professional.user?.name || "Profesional" },
  ];

  return (
    <div className="container mx-auto px-4 py-8">
      <Breadcrumbs items={breadcrumbItems} />

      <div className="grid lg:grid-cols-3 gap-8">
        {/* Main Profile */}
        <div className="lg:col-span-2 space-y-6">
          {/* Header */}
          <Card>
            <CardContent className="p-6">
              <div className="flex flex-col sm:flex-row gap-6">
                <div className="w-24 h-24 bg-primary/10 rounded-full flex items-center justify-center flex-shrink-0">
                  <span className="text-2xl font-bold text-primary">
                    {professional.user?.name?.charAt(0) || "P"}
                  </span>
                </div>

                <div className="flex-1">
                  <div className="flex flex-col sm:flex-row sm:items-start sm:justify-between mb-4">
                    <div>
                      <h1 className="text-2xl font-bold">
                        {professional.user?.name}
                      </h1>
                      <p className="text-xl text-primary font-medium">
                        {professional.title}
                      </p>
                    </div>
                    <div className="flex items-center gap-2 mt-2 sm:mt-0">
                      <div className="flex items-center gap-1">
                        <Star className="w-5 h-5 fill-yellow-400 text-yellow-400" />
                        <span className="font-medium">
                          {professional.rating}
                        </span>
                        <span className="text-muted-foreground">
                          ({professional.reviewCount} reseñas)
                        </span>
                      </div>
                    </div>
                  </div>

                  <p className="text-muted-foreground mb-4">
                    {professional.description}
                  </p>

                  <div className="flex flex-wrap gap-4 text-sm text-muted-foreground mb-4">
                    <div className="flex items-center gap-1">
                      <MapPin className="w-4 h-4" />
                      {professional.location}
                    </div>
                    <div className="flex items-center gap-1">
                      <MessageCircle className="w-4 h-4" />
                      Responde en {professional.responseTime || "24 horas"}
                    </div>
                  </div>

                  {professional.skills && professional.skills.length > 0 && (
                    <div className="flex flex-wrap gap-2">
                      {professional.skills.map((skill, index) => (
                        <span
                          key={index}
                          className="px-3 py-1 bg-secondary text-secondary-foreground rounded-full text-sm"
                        >
                          {skill}
                        </span>
                      ))}
                    </div>
                  )}
                </div>
              </div>
            </CardContent>
          </Card>

          {/* About */}
          <Card>
            <CardHeader>
              <CardTitle>Acerca de</CardTitle>
            </CardHeader>
            <CardContent>
              <p className="text-muted-foreground leading-relaxed">
                {professional.description}
              </p>
              <div className="grid sm:grid-cols-2 gap-4 mt-6">
                <div>
                  <h4 className="font-medium mb-2">Experiencia</h4>
                  <p className="text-muted-foreground">
                    {professional.experienceYears || 1}+ años en el área
                  </p>
                </div>
                <div>
                  <h4 className="font-medium mb-2">Idiomas</h4>
                  <p className="text-muted-foreground">
                    {professional.languages?.join(", ") || "Español"}
                  </p>
                </div>
              </div>
            </CardContent>
          </Card>

          {/* Services */}
          <Card>
            <CardHeader>
              <CardTitle>Servicios</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {professional.services && professional.services.length > 0 ? (
                <div className="grid sm:grid-cols-2 gap-4">
                  {professional.services.map(service => (
                    <div key={service.id} className="p-4 border rounded-lg">
                      <h3 className="font-semibold">{service.title}</h3>
                      <p className="text-sm text-muted-foreground mt-1">
                        {service.description}
                      </p>
                      <p className="font-medium mt-2">
                        Desde $
                        {service.basePrice?.toLocaleString() || "Consultar"}
                      </p>
                    </div>
                  ))}
                </div>
              ) : (
                <p className="text-muted-foreground">
                  No hay servicios publicados
                </p>
              )}
            </CardContent>
          </Card>

          {/* Reviews */}
          <Card>
            <CardHeader>
              <CardTitle>Reseñas</CardTitle>
            </CardHeader>
            <CardContent className="space-y-4">
              {professional.reviews && professional.reviews.length > 0 ? (
                professional.reviews.map(review => (
                  <div
                    key={review.id}
                    className="border-b pb-4 last:border-b-0"
                  >
                    <div className="flex items-center gap-2 mb-2">
                      <div className="flex items-center gap-1">
                        {[...Array(5)].map((_, i) => (
                          <Star
                            key={i}
                            className={`w-4 h-4 ${
                              i < review.rating
                                ? "fill-yellow-400 text-yellow-400"
                                : "text-gray-300"
                            }`}
                          />
                        ))}
                      </div>
                      <span className="font-medium">
                        {review.user?.name || "Cliente"}
                      </span>
                      <span className="text-sm text-muted-foreground">
                        {new Date(review.createdAt).toLocaleDateString("es-AR")}
                      </span>
                    </div>
                    <p className="text-muted-foreground">{review.comment}</p>
                  </div>
                ))
              ) : (
                <p className="text-muted-foreground">Aún no hay reseñas</p>
              )}
            </CardContent>
          </Card>
        </div>

        {/* Sidebar */}
        <div className="space-y-6">
          {/* Price & Actions */}
          <Card>
            <CardContent className="p-6">
              <div className="text-center mb-6">
                <p className="text-3xl font-bold">
                  ${professional.hourlyRate?.toLocaleString()}
                </p>
                <p className="text-muted-foreground">por hora</p>
              </div>

              <div className="space-y-3">
                <Button size="lg" className="w-full">
                  <MessageCircle className="w-4 h-4 mr-2" />
                  Contactar
                </Button>
                <Button size="lg" variant="outline" className="w-full">
                  <Video className="w-4 h-4 mr-2" />
                  Videollamada
                </Button>
                <Button size="lg" variant="outline" className="w-full">
                  <Calendar className="w-4 h-4 mr-2" />
                  Agendar consulta
                </Button>
              </div>
            </CardContent>
          </Card>

          {/* Quick Info */}
          <Card>
            <CardHeader>
              <CardTitle>Información rápida</CardTitle>
            </CardHeader>
            <CardContent className="space-y-3">
              <div className="flex justify-between">
                <span className="text-muted-foreground">
                  Tiempo de respuesta
                </span>
                <span>{professional.responseTime || "24 horas"}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-muted-foreground">Calificación</span>
                <div className="flex items-center gap-1">
                  <Star className="w-4 h-4 fill-yellow-400 text-yellow-400" />
                  <span>{professional.rating}</span>
                </div>
              </div>
              <div className="flex justify-between">
                <span className="text-muted-foreground">
                  Trabajos completados
                </span>
                <span>{professional.reviewCount || 0}</span>
              </div>
              <div className="flex justify-between">
                <span className="text-muted-foreground">Miembro desde</span>
                <span>Enero 2023</span>
              </div>
            </CardContent>
          </Card>
        </div>
      </div>
    </div>
  );
}
